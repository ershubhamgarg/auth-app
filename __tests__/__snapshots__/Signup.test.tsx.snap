// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Signup Screen matches snapshot 1`] = `
<View
  accessibilityIgnoresInvertColors={true}
  style={
    {
      "height": "100%",
      "justifyContent": "center",
      "padding": 20,
    }
  }
>
  <Image
    source={
      {
        "testUri": "../../../src/assets/images/back.png",
      }
    }
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "height": "100%",
          "width": undefined,
        },
        undefined,
      ]
    }
  />
  <View
    onLayout={[Function]}
    style={
      {
        "paddingBottom": 0,
      }
    }
    testID="signup-container"
  >
    <View
      style={
        {
          "alignItems": "center",
        }
      }
    >
      <Image
        source={
          {
            "testUri": "../../../src/assets/logo/logo.png",
          }
        }
        style={
          {
            "height": 100,
            "width": 100,
          }
        }
      />
      <Text
        style={
          {
            "color": "#16476A",
            "fontSize": 13,
            "fontWeight": "500",
          }
        }
      >
        Please enter your details to sign up
      </Text>
    </View>
    <View
      style={
        [
          {
            "width": "100%",
          },
          {
            "marginVertical": 15,
          },
        ]
      }
    >
      <View
        style={
          {
            "borderBottomWidth": 1,
            "borderColor": "#000000",
            "borderRadius": 4,
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#878787",
                "fontSize": 12,
                "marginBottom": 5,
              },
              undefined,
            ]
          }
        >
          Name
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect={false}
            keyboardType="default"
            onChangeText={[Function]}
            placeholder="Name"
            secureTextEntry={false}
            style={
              [
                {
                  "fontSize": 16,
                  "paddingVertical": 5,
                },
                {
                  "flex": 1,
                },
              ]
            }
            testID="name-input"
            value=""
          />
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "width": "100%",
          },
          {
            "marginVertical": 15,
          },
        ]
      }
    >
      <View
        style={
          {
            "borderBottomWidth": 1,
            "borderColor": "#000000",
            "borderRadius": 4,
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#878787",
                "fontSize": 12,
                "marginBottom": 5,
              },
              undefined,
            ]
          }
        >
          Email
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect={false}
            keyboardType="email-address"
            onChangeText={[Function]}
            placeholder="Email"
            secureTextEntry={false}
            style={
              [
                {
                  "fontSize": 16,
                  "paddingVertical": 5,
                },
                {
                  "flex": 1,
                },
              ]
            }
            testID="email-input"
            value=""
          />
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "width": "100%",
          },
          {
            "marginVertical": 15,
          },
        ]
      }
    >
      <View
        style={
          {
            "borderBottomWidth": 1,
            "borderColor": "#000000",
            "borderRadius": 4,
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#878787",
                "fontSize": 12,
                "marginBottom": 5,
              },
              undefined,
            ]
          }
        >
          Password
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect={false}
            onChangeText={[Function]}
            placeholder="Password"
            secureTextEntry={true}
            style={
              [
                {
                  "fontSize": 16,
                  "paddingVertical": 5,
                },
                {
                  "flex": 1,
                },
              ]
            }
            testID="password-input"
            value=""
          />
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              resizeMode="contain"
              source={
                {
                  "testUri": "../../../src/assets/icons/hide.png",
                }
              }
              style={
                [
                  {
                    "height": 20,
                    "width": 20,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        [
          {
            "width": "100%",
          },
          {
            "marginVertical": 15,
          },
        ]
      }
    >
      <View
        style={
          {
            "borderBottomWidth": 1,
            "borderColor": "#000000",
            "borderRadius": 4,
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#878787",
                "fontSize": 12,
                "marginBottom": 5,
              },
              undefined,
            ]
          }
        >
          Confirm Password
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect={false}
            onChangeText={[Function]}
            placeholder="Confirm Password"
            secureTextEntry={true}
            style={
              [
                {
                  "fontSize": 16,
                  "paddingVertical": 5,
                },
                {
                  "flex": 1,
                },
              ]
            }
            testID="confirm-password-input"
            value=""
          />
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              resizeMode="contain"
              source={
                {
                  "testUri": "../../../src/assets/icons/hide.png",
                }
              }
              style={
                [
                  {
                    "height": 20,
                    "width": 20,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "#132440",
            "borderRadius": 5,
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 50,
            "padding": 10,
            "shadowOffset": {
              "height": 1,
              "width": 1,
            },
            "shadowOpacity": 0.4,
          },
          {
            "marginTop": 50,
            "width": "100%",
          },
        ]
      }
      testID="signup-button"
    >
      <Text
        style={
          {
            "color": "#ffffff",
            "fontSize": 15,
            "fontWeight": "700",
            "marginLeft": 10,
          }
        }
      >
        Sign up
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
        }
      }
    >
      <Text
        style={
          {
            "marginTop": 10,
          }
        }
      >
        Already have an account ?
         
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <Text
            style={
              {
                "color": "#3B9797",
                "textDecorationLine": "underline",
              }
            }
          >
            Login
          </Text>
        </View>
      </Text>
    </View>
  </View>
</View>
`;
